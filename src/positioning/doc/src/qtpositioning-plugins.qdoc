/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qtpositioning-plugins.html
\title Qt Positioning Plugins
\brief Default Plugins and Implementing Qt Positioning plugins

Qt Positioning provides the majority of its functionality through plugins.
This document outlines how to develop a new position plugin.

\section1 Default plugins
Some plugins already ship with Qt. These are:

\table
    \row
        \li \b android
        \li Wraps Android positioning subsystem. Available only on Android.
    \row
        \li \b corelocation
        \li A \l {Qt Positioning Core Location plugin}{Core Location} backend
        wraps iOS and macOS positioning subsystems. Available only on Apple
        platforms supporting corelocation.
    \row
        \li \b geoclue
        \li Interfaces with \l{https://www.freedesktop.org/wiki/Software/GeoClue/}{GeoClue} v0.12. Requires GeoClue 0.12 to be present to function.
    \row
        \li \b geoclue2
        \li Interfaces with \l{https://www.freedesktop.org/wiki/Software/GeoClue/}{GeoClue} v2. Requires GeoClue v2 to be present to function.
    \row
        \li \b gypsy
        \li Interfaces with \l{https://gypsy.freedesktop.org/wiki/}{Gypsy} daemon. Requires Gypsy to be present to function.
    \row
        \li \b winrt
        \li Wraps WinRT positioning subsystem. Available only on WinRT and Windows10.
    \row
        \li \b serialnmea
        \li A \l {Qt Positioning Serial NMEA plugin}{Serial NMEA} backend that parses NMEA streams from a GPS receiver over a
        serial link to provide position updates.
    \row
        \li \b positionpoll
        \li A backend providing only area monitoring functionalities via polling on position updates.
\endtable


\section1 Plugin Description

Each plugin is described by a json file. The json describes the plugins capabilities and
version. Below is an example of a json file used by the postionpoll plugin:

\quotefile ../../../plugins/position/positionpoll/plugin.json

The entries have the following meaning:

\table
    \header
        \li Key
        \li Description
    \row
        \li Keys
        \li The unique name/key of the plugin. Each position plugin must have a unique name.
    \row
        \li Provider
        \li The provider name of the services. Multiple plugins may have the same name.
            In such cases the Version string will be used to further distinguish the plugins.
    \row
        \li Position
        \li Set to \c true if the plugin implements a \l QGeoPositionInfoSource.
    \row
        \li Satellite
        \li Set to \c true if the plugin implements a \l QGeoSatelliteInfoSource.
    \row
        \li Monitor
        \li Set to \c true if the plugin implements a \l QGeoAreaMonitorSource.
    \row
        \li Priority
        \li The plugin priority. If multiple plugins have the same provider name, the plugin
            with the higest priority will be used.
\endtable

\section1 Implementing Plugins

A plugin implementer needs to subclass \l QGeoPositionInfoSourceFactory and override one or more of
its functions. If a plugin does not support a specific feature the function should return 0 or
utilize the default implementation.

\list
    \li \l QGeoPositionInfoSourceFactory::areaMonitor()
    \li \l QGeoPositionInfoSourceFactory::positionInfoSource()
    \li \l QGeoPositionInfoSourceFactory::satelliteInfoSource()
\endlist
*/
